name: Free 6-Hour RDP

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Set RDP Password
      run: |
        net user runneradmin Gte2252@#
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      shell: powershell

    - name: Install Ngrok
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive -Path "ngrok.zip" -DestinationPath "$env:USERPROFILE\ngrok"
      shell: powershell

    - name: Start Ngrok Tunnel
      run: |
        $env:Path += ";$env:USERPROFILE\ngrok"
        & "$env:USERPROFILE\ngrok\ngrok.exe" authtoken 2nRUQ69ivly9GBWgRLCniu2KfuI_3LiXvKERrZ8FB8JgGGK9L
        Start-Process -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -Seconds 15
      shell: powershell

    - name: Get Ngrok TCP Address and Send to Telegram
      run: |
        $ErrorActionPreference = "Stop"
        $apiKey = "2nRUQ69ivly9GBWgRLCniu2KfuI_3LiXvKERrZ8FB8JgGGK9L"
        $headers = @{
          "Authorization" = "Bearer $apiKey"
          "Ngrok-Version" = "2"
        }
        $maxRetries = 5
        $retryCount = 0
        $success = $false
        while ($retryCount -lt $maxRetries -and -not $success) {
          try {
            Write-Host "Fetching TCP endpoint from ngrok.com API..."
            $response = Invoke-RestMethod -Uri "https://api.ngrok.com/endpoints" -Headers $headers -Method Get
            $tcpEndpoint = $response.endpoints | Where-Object { $_.proto -eq "tcp" }
            if (-not $tcpEndpoint) {
              throw "No TCP endpoint found yet"
            }

            $publicUrl = $tcpEndpoint.public_url
            $host, $port = $publicUrl -replace "tcp://", "" -split ":"
            $username = "runneradmin"
            $password = "Gte2252@#"

            $message = "*Free 6-Hour RDP*`n`n"
            $message += "*RDP Info:* `n"
            $message += "Username: $username `n"
            $message += "Password: $password `n"
            $message += "Address: ${host}:${port} `n`n"
            $message += "_Auto-refresh every 6 hours._"

            $encodedMessage = [System.Web.HttpUtility]::UrlEncode($message)
            $telegramToken = "7866819450:AAHvce1DZKafond6wlVQfA6Id6haVnFakCM"
            $chatId = "5224269718"
            $telegramUrl = "https://api.telegram.org/bot$telegramToken/sendMessage?chat_id=$chatId&text=$encodedMessage&parse_mode=Markdown"
            Invoke-RestMethod -Uri $telegramUrl -Method Get

            $success = $true
          } catch {
            Write-Host "Attempt $($retryCount + 1) failed. Waiting 10 seconds..."
            Start-Sleep -Seconds 10
            $retryCount++
          }
        }

        if (-not $success) {
          throw "Failed to retrieve TCP tunnel after $maxRetries retries."
        }
      shell: powershell

    - name: Keep session alive for 6 hours
      run: Start-Sleep -Seconds 21600
      shell: powershell
