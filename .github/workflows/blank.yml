name: Free 6-Hour RDP

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Set RDP Password
      run: |
        echo "Setting password..."
        net user runneradmin Gte2252@#
        echo "Enabling RDP..."
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      shell: powershell

    - name: Install Ngrok
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive -Path "ngrok.zip" -DestinationPath "$env:USERPROFILE\ngrok"
      shell: powershell

    - name: Start Ngrok Tunnel
      run: |
        $env:Path += ";$env:USERPROFILE\ngrok"
        & "$env:USERPROFILE\ngrok\ngrok.exe" authtoken 2nRUQ69ivly9GBWgRLCniu2KfuI_3LiXvKERrZ8FB8JgGGK9L
        Start-Process -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -Seconds 10  # Wait for tunnel to initialize
      shell: powershell

    - name: Get Ngrok TCP Address and Send to Telegram
      run: |
        $ErrorActionPreference = "Stop"
        $ngrokApiUrl = "http://127.0.0.1:4040/api/tunnels"
        Start-Sleep -Seconds 10  # Ensure tunnel is up

        $response = Invoke-RestMethod -Uri $ngrokApiUrl
        $tcpTunnel = $response.tunnels | Where-Object {$_.proto -eq "tcp"}
        if (-not $tcpTunnel) {
          throw "Ngrok TCP tunnel not found!"
        }

        $publicUrl = $tcpTunnel.public_url
        $host, $port = $publicUrl -replace "tcp://", "" -split ":"

        $username = "runneradmin"
        $password = "Gte2252@#"
        $message = "üîê *Free 6-Hour RDP* üîê`n`n"
        $message += "üñ• *RDP Info*: `n"
        $message += "üë§ Username: $username `n"
        $message += "üîë Password: $password `n"
        $message += "üåê Address: $host:$port `n`n"
        $message += "üìÖ Auto-refresh every 6 hours."

        $encodedMessage = [System.Web.HttpUtility]::UrlEncode($message)
        $telegramToken = "7866819450:AAHvce1DZKafond6wlVQfA6Id6haVnFakCM"
        $chatId = "5224269718"
        $telegramUrl = "https://api.telegram.org/bot$telegramToken/sendMessage?chat_id=$chatId&text=$encodedMessage&parse_mode=Markdown"

        Invoke-RestMethod -Uri $telegramUrl -Method Get
      shell: powershell

    - name: Keep session alive for 6 hours
      run: Start-Sleep -Seconds 21600
      shell: powershell
